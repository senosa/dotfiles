- hosts: localhost
  connection: local
  gather_facts: no
  become: no
  vars:
    homebrew_taps:
      - caskroom/cask
      - caskroom/fonts
      - homebrew/dupes
      - sanemat/font
      - waltarix/customs
    homebrew_packages:
      - readline
      - openssl
      - { name: openssl, state: linked, install_options: force }
      - ansible
      - git
      - coreutils
      - ghq
      - go
      - heroku
      - jq
      - mackup
      - { name: mpv, install_options: with-bundle }
      - nano
      - peco
      - rbenv
      - rbenv-default-gems
      - reattach-to-user-namespace
      - { name: ricty, install_options: powerline, vim-powerline }
      - ruby-build
      - source-highlight
      - terminal-notifier
      - tig
      - waltarix/customs/tmux
      - tree
      - { name: waltarix/customs/zsh, install_options: disable-etcdir }
    homebrew_cask_packages:
      - 1password
      - alfred
      - appcleaner
      - atom
      - bettertouchtool
      - coteditor
      - daisydisk # MASのDRMがあればStand-aloneをインストール可能
      - dropbox
      - flux
      - gas-mask
      - google-chrome
      - google-japanese-ime
      - hyperswitch
      - iterm2
      - karabiner
      - keka # MASは有料
      - kindle
      - omnifocus
      - omnigraffle
      - path-finder
      - skitch
      - vagrant
      - virtualbox
      - vlc
      - vmware-fusion
      - hetimazipql
      - qlcolorcode
      - qlmarkdown
      - qlstephen
      - quicklook-json

  tasks:
    - name: Tap external repositories
      homebrew_tap: tap={{ item }} state=present
      with_items: "{{ homebrew_taps }}"

    - name: Update homebrew
      homebrew: update_homebrew=yes

    # brew
    - name: Install/Upgrade homebrew packages
      homebrew: >
        name={{ item.name | default(item) }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: "{{ homebrew_packages }}"

    # Ricty for Powerline
    - name: Install Ricty for Powerline fonts
      tags: powerline
      shell: >
        cp /usr/local/Cellar/ricty/3.2.4/share/fonts/Ricty*.ttf ~/Library/Fonts/
        creates="~/Library/Fonts/Ricty Regular for Powerline.ttf"
      register: result
    - name: Rebuild font cache
      tags: powerline
      shell: fc-cache -vf
      when: result.changed == true

    # cask
    - name: Install/Upgrade cask packages
      homebrew_cask: >
        name={{ item.name | default(item) }}
        state={{ item.state | default('present') }}
      with_items: "{{ homebrew_cask_packages }}"

    # dotfiles
    - name: Checkout dotfiles repository
      tags: dotfiles
      git: |
        repo=https://github.com/senosa/dotfiles.git
        dest=~/src/github.com/senosa/dotfiles
    - name: Symlink repo to ~/.dotfiles
      tags: dotfiles
      file: |
        src=~/src/github.com/senosa/dotfiles
        dest=~/.dotfiles
        state=link
        force=yes
    - name: Symlink dotfiles
      tags: dotfiles
      file: |
        src=~/.dotfiles/home/{{ item }}
        dest=~/.{{ item }}
        state=link
        force=yes
      with_items:
        - config
        - dir_colors
        - gemrc
        - gitconfig
        - gitignore
        - irbrc
        - mackup.cfg # TODO Separate dropbox dir for Desktop, Notebook
        - nanorc
        - tigrc
        - tmux.conf
    - name: Symlink dotfiles_private
      tags: dotfiles
      file: |
        src=~/Dropbox/dotfiles_private
        dest=~/.dotfiles_private
        state=link
        force=yes

    # prezto
    - name: Checkout prezto repository
      tags: prezto
      git: |
        repo=https://github.com/senosa/prezto.git
        dest=~/src/github.com/senosa/prezto
    - name: Symlink repo to ~/.zprezto
      tags: prezto
      file: |
        src=~/src/github.com/senosa/prezto
        dest=~/.zprezto
        state=link
        force=yes
    - name: Symlink prezto runcoms
      tags: prezto
      file: |
        src=~/.zprezto/runcoms/{{ item }}
        dest=~/.{{ item }}
        state=link
        force=yes
      with_items:
        - zlogin
        - zlogout
        - zpreztorc
        - zprofile
        - zshenv
        - zshrc

    # dircolors-solarized
    - name: Checkout dircolors-solarized repository
      tags: dircolors
      git: |
        repo=https://github.com/seebi/dircolors-solarized.git
        dest=~/src/github.com/seebi/dircolors-solarized
    - name: Symlink dircolorsdb to ~/.dir_colors
      tags: dircolors
      file: |
        src=~/src/github.com/seebi/dircolors-solarized/dircolors.256dark
        dest=~/.dir_colors
        state=link
        force=yes

    # zsh
    - name: Add /usr/local/bin/zsh to /etc/shells
      tags: zsh
      become: yes
      lineinfile: dest=/etc/shells line='/usr/local/bin/zsh'

    # groupsが不安なので `chsh -s /usr/local/bin/zsh sen` にする
    - name: Change login shell to /usr/local/bin/zsh
      tags: zsh
      become: yes
      shell: chsh -s /usr/local/bin/zsh sen
      register: result
      changed_when: result.stderr.find('no changes made') == -1
    #   user: |
    #     name=sen
    #     group=staff
    #     groups=staff,everyone,localaccounts,_appserverusr,admin,_appserveradm,_lpadmin,com.apple.sharepoint.group.1,_appstore,_lpoperator,_developer,com.apple.access_ftp,com.apple.access_screensharing,com.apple.access_ssh
    #     shell=/usr/local/bin/zsh

    # tmux-plugins
    - name: Checkout tmux-plugins/tpm repository
      tags: tpm
      git: |
        repo=https://github.com/tmux-plugins/tpm
        dest=~/.tmux/plugins/tpm
